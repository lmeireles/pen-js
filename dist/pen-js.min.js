!function(){function t(){var t=this;this.canvas=document.createElement("canvas"),this.canvas.style.cssText="width:100%; height:100%; display:block;",this.holder.appendChild(this.canvas),this.context=this.canvas.getContext("2d"),o(this.canvas,"mousedown touchstart",function(i){e.call(t,i)}),o(this.canvas,"mouseup mouseout mouseleave touchend touchcancel",function(e){i.call(t,e)}),o(this.canvas,"click mousemove touchmove",function(e){n.call(t,e)})}function e(t){this.active=!0,this.activeAction={tool:this.activeTool,color:this.options.penColor,size:parseFloat(this.options.penSize),events:[]},n.call(this,t)}function i(t){this.activeAction&&this.actions.push(this.activeAction),this.active=!1,this.activeAction=null,this.redraw(),n.call(this,t)}function n(t){return t.originalEvent&&t.originalEvent.targetTouches&&(t.pageX=t.originalEvent.targetTouches[0].pageX,t.pageY=t.originalEvent.targetTouches[0].pageY),PenJs.tools[this.activeTool].action.call(this,t),t.preventDefault(),!1}function o(t,e,i){for(var n=e.split(" "),o=0,s=n.length;o<s;o++)t.addEventListener(n[o],i,!1)}function s(t,e){var i;for(i in e)e.hasOwnProperty(i)&&(t[i]=e[i]);return t}function c(t){var e=t.getBoundingClientRect(),i=document.body;return{top:e.top+i.scrollTop,left:e.left+i.scrollLeft}}this.PenJs=function(){if(this.holder=null,this.canvas=null,this.context=null,this.options={penSize:2,penColor:"#000"},this.actions=[],this.activeAction={},this.activeTool="pen",this.active=!1,arguments[0]&&"string"==typeof arguments[0])try{this.holder=document.querySelector(arguments[0])}catch(t){console.error("PenJs: Invalid Css selector informed")}else console.error("PenJs: An id or class must be informed");arguments[1]&&"object"==typeof arguments[1]&&(this.options=s(this.options,arguments[0])),null!==this.holder&&t.call(this)},PenJs.prototype.toDataURL=function(t){return"undefined"==typeof outputMimeType&&(t="image/png"),mime="image/"+t,this.canvas.toDataURL(mime)},PenJs.prototype.redraw=function(){this.canvas.width=this.canvas.clientWidth,this.canvas.height=this.canvas.clientHeight,this.context=this.canvas.getContext("2d");for(var t=0,e=this.actions.length;t<e;t++)this.actions[t].tool&&PenJs.tools[this.actions[t].tool].draw.call(this,this.actions[t]);this.active&&this.activeAction&&PenJs.tools[this.activeTool].draw.call(this,this.activeAction)},PenJs.prototype.clear=function(){this.actions=[],this.activeAction={},this.redraw()},PenJs.tools={},PenJs.tools.pen={action:function(t){if(this.active)return this.activeAction.events.push({x:t.pageX-c(this.canvas).left,y:t.pageY-c(this.canvas).top,event:t.type}),this.redraw()},draw:function(t){var e,i,n,o,s;for(this.context.lineJoin="round",this.context.lineCap="round",this.context.beginPath(),this.context.moveTo(t.events[0].x,t.events[0].y),s=t.events,n=0,o=s.length;n<o;n++)e=s[n],this.context.lineTo(e.x,e.y),i=e;return this.context.strokeStyle=t.color,this.context.lineWidth=t.size,this.context.stroke()}}}();